from problem2 import problem as p2


class Problem(p2.Problem):
    """
        1 equals red
        2 equals green
        3 equals blue
        4 equals yellow
        """
    initialState = {
        'state': [1, 3, 2, 3, 3, 1, 4, 1, 3, 2, 1, 2, 3, 3, 3, 2, 3, 3, 1, 4, 2, 1, 4, 4, 1, 3, 1, 1, 4, 4, 3],
        'value': 16}
    graph = {1: [2, 4, 5],
             2: [1, 3, 5],
             3: [2, 5, 6],
             4: [1, 5, 7, 8],
             5: [1, 2, 3, 4, 6, 8, 9],
             6: [3, 5, 9, 10],
             7: [4, 8, 11, 12],
             8: [7, 4, 5, 9, 12, 13],
             9: [5, 6, 10, 14, 13, 8],
             10: [6, 9, 14, 18, 20, 21],
             11: [7, 12, 15],
             12: [7, 8, 13, 16, 15, 11],
             13: [8, 9, 14, 17, 16, 12, 18],
             14: [9, 10, 18, 13],
             15: [11, 12, 16, 19, 23, 24],
             16: [15, 12, 13, 17, 20, 26, 25, 23, 19],
             17: [13, 18, 20, 16],
             18: [14, 10, 20, 17, 13],
             19: [15, 16, 23],
             20: [21, 22, 27, 26, 16, 17, 18, 10],
             21: [10, 20, 22],
             22: [21, 20, 27],
             23: [19, 16, 25, 24, 15],
             24: [15, 23, 25, 28],
             25: [26, 29, 28, 24, 23, 16],
             26: [27, 30, 29, 25, 16, 20],
             27: [22, 20, 26, 30],
             28: [24, 25, 29, 31],
             29: [25, 26, 30, 31, 28],
             30: [26, 27, 29, 31],
             31: [28, 29, 30], }
    colors = 4
    lower_bound = 1
    upper_bound = 4
    V = 31
    E = 74

    def objective_function(self, state):
        s = [-1] + state[:]
        mismatches = 0
        for x in self.graph.keys():
            for y in self.graph.get(x):
                if y > x:
                    if s[x] == s[y]:
                        mismatches += 1
        return mismatches
